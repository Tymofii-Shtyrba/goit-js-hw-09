{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,iBAAiB,SAsBzC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IAIP,SAASQ,EAAeC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAClCU,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAoCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAGpE,SAASc,EAAaL,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAChCU,EAAAjB,GAASkB,OAAOC,QAAQ,oBAAmCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAvChDJ,SAASmB,cAAc,uBAE/BC,iBAAiB,SAAS,SAACC,GACpCA,EAAEC,iBAGF,IAFA,IAAMC,EAQR,SAAuBC,GACrB,IAAMC,EAAW,GACZC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeP,EAAaQ,OAAAC,cAA5BP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,GAAX,IAAMU,EAANN,EAAWO,MACdZ,EAASW,EAAME,MAAQC,OAAOH,EAAMC,M,WADjCV,GAAW,EAAXC,EAAWY,C,aAAXd,GAAW,MAAXK,EAAWU,QAAXV,EAAWU,Q,YAAXd,E,MAAAC,C,EAGL,OAAOH,C,CAbWiB,CAAc3C,GAEvB4C,EAAI,EAAGA,GAAKpB,EAAUqB,OAAQD,IACrCzC,EAAcyC,EAAGpB,EAAUnB,OAAOyC,KAAKjC,GAAgBkC,MAAM5B,GAC7DK,EAAUnB,OAASmB,EAAUwB,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputs = document.querySelectorAll('input');\nconst submitButt = document.querySelector('button[type=submit]');\n\nsubmitButt.addEventListener('click', (e) => {\n  e.preventDefault();\n  const userInput = collectValues(inputs);\n\n  for (let i = 1; i <= userInput.amount; i++) {\n    createPromise(i, userInput.delay).then(seccussMessage).catch(errorMessage);\n    userInput.delay += userInput.step;\n  }\n});\n\nfunction collectValues(arrayOfInputs) {\n  const newArray = {};\n  for (const input of arrayOfInputs) {\n    newArray[input.name] = Number(input.value);\n  }\n  return newArray;\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  })\n}\n\nfunction seccussMessage({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction errorMessage({ position, delay }) {\n  Notiflix.Notify.success(`Rejected promise ${position} in ${delay}ms`);\n}"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$inputs","document","querySelectorAll","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$seccussMessage","param","$parcel$interopDefault","Notify","success","concat","$ce04d3a99e08e73b$var$errorMessage","querySelector","addEventListener","e","preventDefault","userInput","arrayOfInputs","newArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","name","Number","err","return","$ce04d3a99e08e73b$var$collectValues","i","amount","then","catch","step"],"version":3,"file":"03-promises.0cafc0cc.js.map"}