{"mappings":"YAAA,IAAMA,EAASC,SAASC,iBAAiB,SACtBD,SAASE,cAAc,uBAE/BC,iBAAiB,SAAS,SAACC,GACpCA,EAAEC,iBAGF,IAFA,IAAMC,EAQR,SAAuBC,GACrB,IAAMC,EAAW,GACZC,GAAW,EAAXC,GAAW,EAAXC,OAAWC,E,IAAhB,QAAKC,EAAAC,EAAeP,EAAaQ,OAAAC,cAA5BP,GAAAI,EAAAC,EAAWG,QAAAC,MAAXT,GAAW,GAAX,IAAMU,EAANN,EAAWO,MACdZ,EAASW,EAAME,MAAQF,EAAMC,K,WAD1BV,GAAW,EAAXC,EAAWW,C,aAAXb,GAAW,MAAXK,EAAWS,QAAXT,EAAWS,Q,YAAXb,E,MAAAC,C,EAGL,OAAOH,C,CAbWgB,CAAczB,GAEvB0B,EAAI,EAAGA,EAAInB,EAAUoB,OAAQD,IACpCE,QAAQC,IAAI,M","sources":["src/js/03-promises.js"],"sourcesContent":["const inputs = document.querySelectorAll('input');\nconst submitButt = document.querySelector('button[type=submit]');\n\nsubmitButt.addEventListener('click', (e) => {\n  e.preventDefault();\n  const userInput = collectValues(inputs);\n\n  for (let i = 0; i < userInput.amount; i++) {\n    console.log('yes');\n    \n  }\n});\n\nfunction collectValues(arrayOfInputs) {\n  const newArray = {};\n  for (const input of arrayOfInputs) {\n    newArray[input.name] = input.value;\n  }\n  return newArray;\n}\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n"],"names":["$ce04d3a99e08e73b$var$inputs","document","querySelectorAll","querySelector","addEventListener","e","preventDefault","userInput","arrayOfInputs","newArray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","name","err","return","$ce04d3a99e08e73b$var$collectValues","i","amount","console","log"],"version":3,"file":"03-promises.958e6b41.js.map"}